# import requests
import json


# headers = {
# 	"cookie": "SRCHHPGUSR=SRCHLANG=en&BRW=M&BRH=S&CW=1324&CH=226&SCW=1324&SCH=3691&DPR=2.0&UTC=-240&DM=0&WTS=63817488554&HV=1682045968&PRVCW=1324&PRVCH=226&EXLTT=29&cdxtone=Balanced&cdxtoneopts=galileo,glpromptv6p; MUIDB=05BB3BA62CCB65942616295E2D616483; _RwBf=ilt=13&ihpd=2&ispd=9&rc=21&rb=21&gb=0&rg=0&pc=21&mtu=0&rbb=0.0&g=0&cid=&clo=0&v=28&l=2023-04-20T07:00:00.0000000Z&lft=0001-01-01T00:00:00.0000000&aof=0&o=0&p=bingcopilotwaitlist&c=MY00IA&t=1597&s=2023-04-19T08:17:34.5525310+00:00&ts=2023-04-21T02:59:44.7141996+00:00&rwred=0&wls=2&lka=0&lkt=0&TH=&mta=0&e=Nsbm3gidKROBd5hmVWTk5c5oQbhbNR_dfKQRsaqqhJfVtUOAt2eGAAuQuoCtRJpVq4SD7N_H1UvocQjyh2BkPA&A=; _SS=SID=211E758C544F6C5F2BCF677555E56D1F&R=21&RB=21&GB=0&RG=0&RP=21&OCID=MY0291; _EDGE_S=SID=211E758C544F6C5F2BCF677555E56D1F&mkt=en-ca; ipv6=hit=1682049569320&t=4; SRCHUSR=DOB=20230419&T=1682045965000&POEX=W; _HPVN=CS=eyJQbiI6eyJDbiI6MiwiU3QiOjAsIlFzIjowLCJQcm9kIjoiUCJ9LCJTYyI6eyJDbiI6MiwiU3QiOjAsIlFzIjowLCJQcm9kIjoiSCJ9LCJReiI6eyJDbiI6MiwiU3QiOjAsIlFzIjowLCJQcm9kIjoiVCJ9LCJBcCI6dHJ1ZSwiTXV0ZSI6dHJ1ZSwiTGFkIjoiMjAyMy0wNC0yMFQwMDowMDowMFoiLCJJb3RkIjowLCJHd2IiOjAsIkRmdCI6bnVsbCwiTXZzIjowLCJGbHQiOjAsIkltcCI6MTJ9; WLS=C=5fcaeb2a21511bcc&N=Ji+Hoon; USRLOC=HS=1&ELOC=LAT=43.773799896240234|LON=-79.4162826538086|N=Toronto%2C%20Ontario|ELT=4|; SUID=A; _UR=QS=0&TQS=0; WLID=EPStoV0mPkHeZeIrOWOzYWhLkuBUthhV7Yb3RoxY8541rG/EebBpv9jz+9ah0G39pI6KjVlybq5wNXrHWqj1bYm2D0EoeH38fhNaYM+8l/I=; ANON=A=36D089296DCE3A6E003FC391FFFFFFFF&E=1c3c&W=1; KievRPSSecAuth=FAByBBRaTOJILtFsMkpLVWSG6AN6C/svRwNmAAAEgAAACDvn+uL7oTHAMARL33WerSsDDYGx4pPB0KyMxu3xejknCINRYrnJKuNiZM8embLb4kbE6a+ZHCt2XpUJjId6VEu96r7KL2WQ64e4alNT524a2J3c3QOjAXj09AvkGufL5MAQ9iEt21HF3vpwlyORzItTfagG92x4i23bEmqwN2XQj/875sse0VRbwOzBVbtwYHX6g6+GW+oEnLV5tcVrQYPvZAajpZpJCk05FYcaNYQ+XE12B9qTZb/afK0R8fz6nT/ABmnmtsegy7CyoyMDfsMm+pB2G4YhXnMQdQY4m2Z+I3t3gB8ebWRx/QfCiKX6hBDwKNVlYOEKb/UC/afBGS8MZ3XhlmjzlmfXW/qP6G/dckvGllwdIREMbnGYFlc5t7kABKqyE91aUxOgo2V3umsTsup1X37O2sSPUk9/J/8TeSyKW8i/F2ASNfPQs9VEK0R2hx4S/AiALRB/6GyIBw8RwZ0y8TC2orZlzu5x+wx04Y52pb5oBsmEuKASZFq90d/T84JFZpGYc2EouAKyRVq83WlAtHtX+giIV/yaLNUuzvMgm8oZ1M/Y6hWURAvPSjDzvAPil7le/d7+rTf06KJrn/B2mak6zoNfxakReI9Wf4CPuKEzWbOUW4xZf/gdceTWd02u3WXLRhx1lRo6hduK73k7bB9fKRtDxRg7uG/+yaXCITW2P2YJ2eSu2WrdvYO1CuDn7v5JVIzs1rb5kPtKHn2ph6JTaa5St3Ac/1KUX4dR1a6vaIssoEj0iahqXRq076hOcIpwP+3rTOrGgvJSF+fDgXs69KXejIQS9oQPbm9sr8ydt8C+WUkBOHgXb9PyFjEYjo8y9XGXwdcmT4iWI+E5AZXYNgZSIbxcCGdVkTfhGygvhcFVFK1u/v+cKJEO/vw59M6RUINHIUka1Ge7oQvAWUd09D7eIy7rYINMepberAeL37QsJaDxftAxK3SsJpCTaxcJSWAIOzLwZSHFbG7I3dNvqPwq6GG9RINsbjtam2RfqXTY3xUhVGcGVatDR76hLcY0rMZnQjzvvbAXs6kVkNQ5UlRb9mR27PdBzHUBPOabS8XJur8NnbopaC8JBprab1FMNZtZxWYt3kD02DBASKLmBmqN4+VhC7Oys7tzalPdAy7LvFtnJlJFzjwPuYuBQKcju7F2hn0QVuKOxnEKfsTUVsSbY05tXwl94GkBS3tZG+wbP7QeN9/+/fTXTpRCw23cmIve3veUjpuSn02wR09wYDGy8hieDH41dzwvOML885yAczyz5+hk4f7Mz/I+3Ts214HnIFbI0i55JwBptNuTmosyxNa9cP8A8YosaqQL8H+jmJ7s+fGjryZHGSkLhYy8oboqyaYTv9NKCdLyDUXYDmUC4T5y847z22Jcq0ch2+4Kt0dVIMz9xI5a+cFZV4Xf/MkQcmn1qgrX+gSWR92SZjK4FABxUQYh0guoiaIJrgTePOL8hcxuBA==; NAP=V=1.9&E=1be2&C=obQoLxF2sS9Brba5cdGdnT3GXw0V_Z7dnHSOZPC8bBGp0NVvlWyNQg&W=1; PPLState=1; _U=1xuZJEuaVmSGl48uAPzM01TXinPrp7Yv3I8d0X4ow3PzZQXqyxHRe2s5ZfeSbKmoiArwVIarITR972m6kt5uKfclzdCeD9xHhsLZqHHTzJx60VyQlmRIhZAw7LBfeA4_wCyz5XhSymBfXsozLGHweUPLP0hxeU7mlLmB25-RfBES3zYM4jKtYbDTFKb3IqBXkYy-rDfRJ1OJtH6B-R19UntoqqdCRZTk7DFL8FdK0rYg; ABDEF=V=13&ABDV=13&MRB=1681892215966&MRNB=0; MSCCSC=1; MUID=05BB3BA62CCB65942616295E2D616483; SRCHD=AF=NOFORM; SRCHUID=V=2&GUID=244C6276E9694A1A947C93385A1793A5&dmnchg=1; _EDGE_V=1"
# }


# r = requests.get("https://www.bing.com/turing/conversation/create", headers=headers)
# print(r.json())

# "SRCHLANG=en&BRW=M&BRH=S&CW=1324&CH=226&SCW=1324&SCH=3350&DPR=2.0&UTC=-240&DM=0&WTS=63817488554&HV=1682047194&PRVCW=1324&PRVCH=226&EXLTT=31&cdxtone=Creative&cdxtoneopts=h3imaginative,clgalileo,gencontentv3",
# "SRCHLANG=en&BRW=M&BRH=S&CW=1324&CH=226&SCW=1324&SCH=3350&DPR=2.0&UTC=-240&DM=0&WTS=63817488554&HV=1682047194&PRVCW=1324&PRVCH=226&EXLTT=31&cdxtone=Balanced&cdxtoneopts=galileo,glpromptv6p",
# "SRCHLANG=en&BRW=M&BRH=S&CW=1324&CH=226&SCW=1324&SCH=3350&DPR=2.0&UTC=-240&DM=0&WTS=63817488554&HV=1682047194&PRVCW=1324&PRVCH=226&EXLTT=31&cdxtone=Precise&cdxtoneopts=h3precise,clgalileo"




creative = creative.split("; ")
balanced = balanced.split("; ")
precise = precise.split("; ")


temp = {}


for item in creative:
	key, val = item.split("=", 1)
	if val.isdigit():
		val = int(val)
	temp[key] = val

print(json.dumps(temp, indent=4))
